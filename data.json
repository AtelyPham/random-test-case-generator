{
  "verdict#82": "OK",
  "verdict#83": "OK",
  "verdict#84": "OK",
  "verdict#85": "OK",
  "verdict#80": "OK",
  "verdict#81": "OK",
  "verdict#86": "OK",
  "verdict#87": "OK",
  "verdict#88": "OK",
  "verdict#89": "OK",
  "verdict#71": "OK",
  "verdict#72": "OK",
  "verdict#73": "OK",
  "verdict#74": "OK",
  "verdict#70": "OK",
  "rejected#4": "false",
  "verdict#79": "OK",
  "rejected#3": "false",
  "rejected#2": "false",
  "rejected#1": "false",
  "verdict#75": "OK",
  "verdict#76": "OK",
  "verdict#77": "OK",
  "verdict#78": "OK",
  "rejected#9": "false",
  "rejected#8": "false",
  "rejected#7": "false",
  "rejected#6": "false",
  "rejected#5": "false",
  "verdict#60": "OK",
  "verdict#61": "OK",
  "verdict#62": "OK",
  "verdict#63": "OK",
  "verdict#68": "OK",
  "verdict#69": "OK",
  "verdict#64": "OK",
  "verdict#65": "OK",
  "verdict#66": "OK",
  "verdict#67": "OK",
  "checkerExitCode#97": "0",
  "checkerExitCode#96": "0",
  "checkerExitCode#99": "0",
  "checkerExitCode#98": "0",
  "verdict#50": "OK",
  "verdict#51": "OK",
  "verdict#52": "OK",
  "verdict#57": "OK",
  "verdict#58": "OK",
  "verdict#59": "OK",
  "verdict#53": "OK",
  "verdict#54": "OK",
  "verdict#55": "OK",
  "verdict#56": "OK",
  "verdict#40": "OK",
  "checkerExitCode#80": "0",
  "verdict#41": "OK",
  "checkerExitCode#82": "0",
  "exitCode#130": "0",
  "checkerExitCode#81": "0",
  "exitCode#131": "0",
  "checkerExitCode#84": "0",
  "checkerExitCode#83": "0",
  "verdict#46": "OK",
  "verdict#47": "OK",
  "verdict#48": "OK",
  "exitCode#132": "0",
  "verdict#49": "OK",
  "verdict#42": "OK",
  "verdict#43": "OK",
  "verdict#44": "OK",
  "verdict#45": "OK",
  "accepted#81": "true",
  "accepted#80": "true",
  "accepted#83": "true",
  "exitCode#129": "0",
  "accepted#82": "true",
  "checkerExitCode#75": "0",
  "accepted#89": "true",
  "checkerExitCode#74": "0",
  "accepted#88": "true",
  "checkerExitCode#77": "0",
  "checkerExitCode#76": "0",
  "checkerExitCode#79": "0",
  "accepted#85": "true",
  "checkerExitCode#78": "0",
  "accepted#84": "true",
  "accepted#87": "true",
  "accepted#86": "true",
  "checkerExitCode#91": "0",
  "verdict#30": "OK",
  "checkerExitCode#90": "0",
  "checkerExitCode#93": "0",
  "checkerExitCode#92": "0",
  "exitCode#120": "0",
  "checkerExitCode#95": "0",
  "checkerExitCode#94": "0",
  "verdict#35": "OK",
  "exitCode#123": "0",
  "verdict#36": "OK",
  "exitCode#124": "0",
  "verdict#37": "OK",
  "exitCode#121": "0",
  "verdict#38": "OK",
  "exitCode#122": "0",
  "verdict#31": "OK",
  "exitCode#127": "0",
  "verdict#32": "OK",
  "exitCode#128": "0",
  "verdict#33": "OK",
  "exitCode#125": "0",
  "verdict#34": "OK",
  "exitCode#126": "0",
  "accepted#1": "true",
  "accepted#92": "true",
  "accepted#91": "true",
  "accepted#3": "true",
  "accepted#94": "true",
  "exitCode#118": "0",
  "accepted#2": "true",
  "accepted#93": "true",
  "exitCode#119": "0",
  "verdict#39": "OK",
  "accepted#90": "true",
  "accepted#9": "true",
  "checkerExitCode#86": "0",
  "accepted#8": "true",
  "checkerExitCode#85": "0",
  "accepted#99": "true",
  "checkerExitCode#88": "0",
  "checkerExitCode#87": "0",
  "accepted#5": "true",
  "accepted#96": "true",
  "accepted#4": "true",
  "checkerExitCode#89": "0",
  "accepted#95": "true",
  "accepted#7": "true",
  "accepted#98": "true",
  "accepted#6": "true",
  "accepted#97": "true",
  "checkerExitCode#60": "0",
  "accepted#59": "true",
  "checkerExitCode#62": "0",
  "checkerExitCode#61": "0",
  "verdict#24": "OK",
  "exitCode#112": "0",
  "verdict#25": "OK",
  "exitCode#113": "0",
  "verdict#26": "OK",
  "exitCode#110": "0",
  "verdict#27": "OK",
  "exitCode#111": "0",
  "verdict#20": "OK",
  "exitCode#116": "0",
  "verdict#21": "OK",
  "exitCode#117": "0",
  "verdict#22": "OK",
  "exitCode#114": "0",
  "verdict#23": "OK",
  "exitCode#115": "0",
  "exitCode#109": "0",
  "accepted#61": "true",
  "exitCode#107": "0",
  "accepted#60": "true",
  "exitCode#108": "0",
  "verdict#28": "OK",
  "verdict#29": "OK",
  "checkerExitCode#53": "0",
  "accepted#67": "true",
  "checkerExitCode#52": "0",
  "accepted#66": "true",
  "checkerExitCode#55": "0",
  "accepted#69": "true",
  "checkerExitCode#54": "0",
  "accepted#68": "true",
  "checkerExitCode#57": "0",
  "accepted#63": "true",
  "checkerExitCode#56": "0",
  "accepted#62": "true",
  "checkerExitCode#59": "0",
  "accepted#65": "true",
  "checkerExitCode#58": "0",
  "accepted#64": "true",
  "checkerExitCode#71": "0",
  "checkerExitCode#70": "0",
  "checkerExitCode#73": "0",
  "checkerExitCode#72": "0",
  "verdict#13": "OK",
  "exitCode#101": "0",
  "verdict#14": "OK",
  "exitCode#102": "0",
  "verdict#15": "OK",
  "verdict#16": "OK",
  "exitCode#100": "0",
  "contestName": "Codeforces Round #593 (Div. 2)",
  "exitCode#105": "0",
  "verdict#10": "OK",
  "exitCode#106": "0",
  "verdict#11": "OK",
  "exitCode#103": "0",
  "verdict#12": "OK",
  "exitCode#104": "0",
  "accepted#70": "true",
  "accepted#72": "true",
  "accepted#71": "true",
  "verdict#17": "OK",
  "verdict#18": "OK",
  "verdict#19": "OK",
  "checkerExitCode#64": "0",
  "accepted#78": "true",
  "checkerExitCode#63": "0",
  "accepted#77": "true",
  "checkerExitCode#66": "0",
  "checkerExitCode#65": "0",
  "accepted#79": "true",
  "checkerExitCode#68": "0",
  "accepted#74": "true",
  "checkerExitCode#67": "0",
  "accepted#73": "true",
  "accepted#76": "true",
  "checkerExitCode#69": "0",
  "accepted#75": "true",
  "accepted#38": "true",
  "accepted#37": "true",
  "checkerExitCode#40": "0",
  "accepted#39": "true",
  "checkerExitCode#39": "0",
  "checkerExitCode#38": "0",
  "answer#130": "1698969923",
  "answer#131": "1872564845",
  "answer#132": "499992",
  "checkerExitCode#31": "0",
  "accepted#45": "true",
  "checkerExitCode#30": "0",
  "accepted#44": "true",
  "checkerExitCode#33": "0",
  "accepted#47": "true",
  "checkerExitCode#32": "0",
  "accepted#46": "true",
  "checkerExitCode#35": "0",
  "accepted#41": "true",
  "checkerExitCode#34": "0",
  "accepted#40": "true",
  "checkerExitCode#37": "0",
  "accepted#43": "true",
  "checkerExitCode#36": "0",
  "accepted#42": "true",
  "accepted#49": "true",
  "accepted#48": "true",
  "checkerExitCode#51": "0",
  "checkerExitCode#50": "0",
  "checkerExitCode#130": "0",
  "checkerExitCode#132": "0",
  "checkerExitCode#131": "0",
  "checkerExitCode#49": "0",
  "accepted#50": "true",
  "checkerExitCode#42": "0",
  "accepted#56": "true",
  "checkerExitCode#41": "0",
  "accepted#55": "true",
  "checkerExitCode#44": "0",
  "accepted#58": "true",
  "checkerExitCode#43": "0",
  "accepted#57": "true",
  "checkerExitCode#46": "0",
  "accepted#52": "true",
  "checkerExitCode#45": "0",
  "accepted#51": "true",
  "checkerExitCode#48": "0",
  "accepted#54": "true",
  "checkerExitCode#47": "0",
  "accepted#53": "true",
  "accepted#19": "true",
  "accepted#16": "true",
  "accepted#15": "true",
  "accepted#18": "true",
  "accepted#17": "true",
  "checkerExitCode#121": "0",
  "checkerExitCode#120": "0",
  "checkerExitCode#123": "0",
  "checkerExitCode#122": "0",
  "checkerExitCode#17": "0",
  "checkerExitCode#125": "0",
  "checkerExitCode#16": "0",
  "checkerExitCode#124": "0",
  "checkerExitCode#19": "0",
  "checkerExitCode#127": "0",
  "checkerExitCode#18": "0",
  "checkerExitCode#126": "0",
  "checkerExitCode#129": "0",
  "checkerExitCode#128": "0",
  "accepted#23": "true",
  "accepted#22": "true",
  "checkerExitCode#11": "0",
  "accepted#25": "true",
  "checkerExitCode#10": "0",
  "accepted#24": "true",
  "checkerExitCode#13": "0",
  "checkerExitCode#12": "0",
  "checkerExitCode#15": "0",
  "accepted#21": "true",
  "checkerExitCode#14": "0",
  "accepted#20": "true",
  "accepted#27": "true",
  "accepted#26": "true",
  "accepted#29": "true",
  "accepted#28": "true",
  "checkerExitCode#110": "0",
  "challengeLink": "/contest/1236/challenge/122702491",
  "checkerExitCode#112": "0",
  "checkerExitCode#111": "0",
  "input#15": "1 1\r\n1\r\n",
  "checkerExitCode#28": "0",
  "checkerExitCode#114": "0",
  "input#14": "100000 99996\r\n53380 85204 66551 50349 35302 798 89862 82656 61567 84322 1349 31136 15273 25973 37132 15565 83220 96159 20291 56665 32229 97341 36808 20715 74546 61823 95886 13822 31815 94667 17400 75103 37507 4728 41122 87282 88828 40148 62393 81613 62327 17119 84701 25723 42449 44270 67526 20154 50297 22473 86140 85182 66707 97772 91134 85356 3542 20554 23932 52863 31535 65957 64637 17959 65660 57560 40826 86021 28658 9933 6945 1329 96184 77415 43955 99924 45065 16858 65542 3918 69366 54542 2019 72497 592...",
  "checkerExitCode#27": "0",
  "checkerExitCode#113": "0",
  "input#17": "3 1\r\n2\r\n",
  "checkerExitCode#116": "0",
  "input#16": "2 1\r\n2\r\n",
  "checkerExitCode#29": "0",
  "checkerExitCode#115": "0",
  "input#11": "100000 11300\r\n63517 17001 80456 45266 16337 30026 90187 8532 71025 13561 73426 31948 79408 44175 41572 15702 25860 39209 52904 39502 52394 90758 29836 16023 21599 9323 55906 3095 71688 55679 97022 63032 2475 61743 97753 28073 57556 43019 18577 41755 16497 9383 89126 36997 41910 49467 27775 3137 39994 60004 94499 37932 67160 68161 63361 14570 54479 20566 9960 67423 24163 69516 40655 31063 64314 27503 15982 57247 7935 16943 22147 76585 36290 10944 6607 10188 91925 27289 61878 55682 49073 27129 84739 79689 92...",
  "checkerExitCode#118": "0",
  "input#10": "90000 11300\r\n925 43897 67203 65502 78266 57849 57303 11959 57000 43231 80875 58759 32220 51720 23631 58868 9327 25911 79191 37132 84224 75107 28634 81424 6399 30518 84533 88516 62371 63679 80903 8609 46373 37249 44035 85796 84739 39298 20656 20812 18990 65549 49692 15343 36012 48368 11397 48517 17879 79695 40799 15644 31307 20399 2337 84675 72668 85900 12103 52543 17742 65507 74401 86360 25227 6120 67635 40317 47681 48418 73491 61820 27761 64746 50111 40923 23297 71648 89236 75762 29851 23718 12887 3406 66...",
  "checkerExitCode#117": "0",
  "input#13": "52300 20000\r\n21401 10552 48041 10128 38502 16072 38841 8789 39544 35108 14728 38419 10887 18053 44875 1748 14012 32681 31071 5660 33023 1322 18976 16416 21257 29437 26207 13834 39275 19400 5804 51655 51493 15145 10081 26553 33757 48033 12040 27633 32141 31502 44641 17914 42780 16673 37710 33480 6902 30144 4098 31502 34415 29477 17695 30112 3788 37826 28823 41378 12494 31551 12767 48783 5777 28371 16403 43715 46538 38523 31959 11134 28878 30769 29453 23162 10529 14106 41709 2361 49516 10797 1348 27145 5391 ...",
  "input#12": "52300 10000\r\n44743 49875 45888 1955 12419 3284 44485 40007 7900 7256 13626 19981 49172 28736 22656 48294 6090 32440 10423 9975 50414 37043 28319 39700 10536 31376 20598 9164 32549 24130 25501 50818 40285 15641 35851 51178 50615 50530 32043 49110 25660 6047 27348 28934 17269 27729 36900 28913 6976 26392 19813 33582 15419 37243 49804 46487 48745 46417 33212 7873 22359 48973 7739 6126 29588 21947 48004 52081 28486 19332 27544 1918 26307 11938 2901 38275 21684 21402 46858 49313 39789 41669 29713 16377 4827 387...",
  "checkerExitCode#119": "0",
  "checkerExitCode#20": "0",
  "accepted#34": "true",
  "accepted#33": "true",
  "checkerExitCode#22": "0",
  "accepted#36": "true",
  "checkerExitCode#21": "0",
  "accepted#35": "true",
  "checkerExitCode#24": "0",
  "accepted#30": "true",
  "checkerExitCode#23": "0",
  "checkerExitCode#26": "0",
  "accepted#32": "true",
  "checkerExitCode#25": "0",
  "accepted#31": "true",
  "input#19": "1 10\r\n1 1 1 1 1 1 1 1 1 1\r\n",
  "checkerStdoutAndStderr#132": "ok answer is \u0027499992\u0027\r\n",
  "input#18": "4 1\r\n1\r\n",
  "checkerStdoutAndStderr#130": "ok answer is \u00271698969923\u0027\r\n",
  "checkerStdoutAndStderr#131": "ok answer is \u00271872564845\u0027\r\n",
  "input#26": "8 10\r\n2 8 3 8 5 6 5 5 4 4\r\n",
  "input#25": "7 10\r\n1 1 7 7 3 4 6 3 2 3\r\n",
  "input#28": "6 1\r\n5\r\n",
  "input#27": "5 1\r\n1\r\n",
  "input#22": "4 10\r\n4 1 4 2 2 1 4 3 3 1\r\n",
  "input#21": "3 10\r\n3 2 2 2 3 1 3 3 3 1\r\n",
  "input#24": "6 10\r\n5 3 4 3 2 3 1 6 1 1\r\n",
  "input#23": "5 10\r\n3 2 4 3 3 4 2 5 3 2\r\n",
  "input#20": "2 10\r\n1 2 1 1 2 2 2 2 2 2\r\n",
  "accepted#131": "true",
  "accepted#130": "true",
  "accepted#132": "true",
  "checkerStdoutAndStderr#125": "ok answer is \u0027775955884\u0027\r\n",
  "checkerStdoutAndStderr#126": "ok answer is \u0027958629152\u0027\r\n",
  "checkerStdoutAndStderr#123": "ok answer is \u0027392295996\u0027\r\n",
  "checkerStdoutAndStderr#124": "ok answer is \u0027585628184\u0027\r\n",
  "checkerStdoutAndStderr#129": "ok answer is \u00271520352446\u0027\r\n",
  "checkerStdoutAndStderr#127": "ok answer is \u00271150912024\u0027\r\n",
  "checkerStdoutAndStderr#128": "ok answer is \u00271337651201\u0027\r\n",
  "checkerStdoutAndStderr#121": "ok answer is \u00275916590859\u0027\r\n",
  "input#29": "7 1\r\n3\r\n",
  "checkerStdoutAndStderr#122": "ok answer is \u0027198297996\u0027\r\n",
  "checkerStdoutAndStderr#120": "ok answer is \u00279874754950\u0027\r\n",
  "input#37": "5000 100\r\n3150 4568 3083 2877 4459 2222 2213 2729 4087 4362 1694 705 3898 553 1910 3586 3599 641 3331 271 349 3464 3319 717 2959 4461 3189 3152 4604 3541 3743 125 3039 2119 3067 3102 1535 2352 4401 3393 1161 1233 3463 1417 721 2772 3973 2051 1901 2074 3113 3267 1090 2311 1717 589 1796 28 260 3908 1979 5 3160 2494 1368 2241 2239 309 3853 93 3385 3944 1114 2881 4204 2728 3256 929 593 2827 1010 3829 2948 2773 103 4297 2999 4186 4018 2846 743 901 2034 1343 1022 181 4306 3925 2624 978\r\n",
  "accepted#126": "true",
  "input#36": "4000 100\r\n1184 314 3114 3998 471 67 2327 2585 2047 3272 157 894 2981 934 2160 1568 3846 2893 2554 2761 2966 607 1110 792 3098 341 214 926 525 250 1311 1120 2143 1198 1992 3160 2321 1060 1183 1908 3002 2340 1379 3605 2181 2858 2507 1938 849 2789 2781 1075 3152 1721 3096 3734 1992 3517 747 3276 3701 2078 795 3709 2949 3450 3105 2464 3770 2374 170 68 3980 3529 917 75 3940 1374 1944 3689 1186 2294 1276 1801 3161 2356 1180 2952 1710 3535 3274 3992 540 1427 1578 1535 882 2656 3349 3477\r\n",
  "accepted#125": "true",
  "input#39": "7000 100\r\n809 6179 2933 5332 6435 4045 4578 3312 678 3247 6664 351 2732 6190 1923 4326 2489 3034 3991 2097 603 3882 1951 456 4577 382 3929 1092 1249 6227 6312 6342 2047 3283 3217 3873 4053 1450 2630 2955 69 3418 526 2336 1505 1112 4099 87 4900 452 1754 2059 3559 6789 4151 3195 5917 435 3982 3282 3534 5067 1379 1959 5424 439 4107 1511 5233 4123 1601 1590 975 4497 74 930 2568 526 5505 2784 5362 3 6484 2908 4396 5796 4444 4254 3251 2660 4569 5720 1622 4560 4724 1961 643 6679 1068 3684\r\n",
  "accepted#128": "true",
  "input#38": "6000 100\r\n4331 117 2860 2156 447 5082 3395 4169 2639 5453 2127 3732 2815 5275 4172 2308 3544 1286 1405 1588 1028 1025 743 5234 3524 2069 5059 3378 874 128 4880 234 3151 849 2142 2339 1646 1453 4516 4878 4615 5421 5738 1229 5965 3198 3632 5973 5144 5167 2934 4163 324 2902 338 148 4113 732 4173 3947 4257 1036 3526 5983 3004 840 5565 2858 5151 5108 5897 5819 2840 2041 5491 277 4764 3779 4345 2158 834 5172 2812 5041 2454 4047 4114 316 1431 5053 4804 5811 4424 1451 3873 1019 1218 5706 4794 4479\r\n",
  "accepted#127": "true",
  "input#33": "1000 100\r\n343 745 296 856 507 192 780 459 9 193 753 28 334 871 589 105 612 751 708 129 32 628 974 641 323 596 604 759 906 272 606 898 726 304 279 448 589 565 735 53 935 966 424 363 153 900 722 597 501 125 512 282 744 460 529 488 67 895 407 863 59 984 211 458 578 461 999 10 411 521 738 842 689 160 168 924 313 926 576 106 11 585 772 694 221 403 20 842 64 113 787 161 457 998 921 813 225 633 231 78\r\n",
  "input#32": "10 1\r\n1\r\n",
  "accepted#129": "true",
  "input#35": "3000 100\r\n1002 1253 41 1014 483 911 2849 1042 1600 374 2723 867 1872 1212 2898 846 2606 144 968 1252 1287 750 2902 1571 2749 2324 1344 1508 1255 1855 2174 307 31 468 725 923 914 2255 68 2319 2548 2343 592 1794 641 240 2848 824 797 2503 1665 2178 1917 1834 771 2391 2188 2110 1834 2237 423 2047 2430 1732 825 851 971 107 984 2551 658 2489 1550 1777 2334 2422 1433 2332 1784 63 659 1759 2116 1637 514 606 1658 718 1297 2927 2509 1275 2150 2319 2727 401 1266 1683 2075 1784\r\n",
  "input#34": "2000 100\r\n1525 1999 265 1839 495 1756 666 602 560 1284 186 56 955 785 339 123 1365 1204 486 639 903 189 886 1054 1184 1908 474 282 176 1268 1742 198 430 1738 354 1389 995 666 1850 538 93 154 508 174 397 1622 85 1710 1849 1706 1332 1986 683 1051 1150 535 1872 1599 216 1198 441 719 576 1947 1997 60 133 262 198 1240 954 718 1119 616 1047 577 1629 777 1032 436 835 120 1740 1665 1164 152 839 1780 181 1616 256 366 1951 1211 1876 1459 1842 1606 1505 283\r\n",
  "accepted#12": "true",
  "accepted#11": "true",
  "accepted#14": "true",
  "input#31": "9 1\r\n7\r\n",
  "accepted#120": "true",
  "accepted#13": "true",
  "input#30": "8 1\r\n8\r\n",
  "accepted#122": "true",
  "accepted#121": "true",
  "accepted#10": "true",
  "accepted#124": "true",
  "accepted#123": "true",
  "checkerStdoutAndStderr#114": "ok answer is \u00274748660015\u0027\r\n",
  "checkerStdoutAndStderr#115": "ok answer is \u00275773823275\u0027\r\n",
  "checkerStdoutAndStderr#112": "ok answer is \u00271813969997\u0027\r\n",
  "checkerStdoutAndStderr#113": "ok answer is \u00273407342230\u0027\r\n",
  "checkerStdoutAndStderr#118": "ok answer is \u00278858746525\u0027\r\n",
  "checkerStdoutAndStderr#119": "ok answer is \u00278974233945\u0027\r\n",
  "checkerStdoutAndStderr#116": "ok answer is \u00277027256804\u0027\r\n",
  "checkerStdoutAndStderr#117": "ok answer is \u00278062898279\u0027\r\n",
  "checkerStdoutAndStderr#110": "ok answer is \u00277923846931\u0027\r\n",
  "checkerStdoutAndStderr#111": "ok answer is \u00279993912275\u0027\r\n",
  "input#48": "60000 11300\r\n18450 14623 18915 56680 39038 4815 45382 45771 58695 44520 48382 37834 55863 17073 41239 55710 13341 57014 35747 52549 37545 8293 21013 53376 10548 18451 39461 46964 47254 48277 39119 53161 15278 26151 1587 54606 34494 51816 4278 1330 41517 48732 32320 56973 55843 20457 44125 46997 15472 33754 23324 33481 33829 32223 40947 45578 22809 14859 48920 47869 17317 17397 14697 32938 17513 16824 41574 14976 2405 42258 35954 48879 55840 51048 48853 18796 50757 13729 9628 27376 30689 32103 51160 8921 38...",
  "accepted#115": "true",
  "input#47": "50000 11300\r\n12762 17926 19849 10944 197 31504 18571 28614 2188 20714 1876 6624 23611 2729 1434 29116 17249 41750 27031 24718 47618 41788 24328 9659 44902 21724 5967 43246 27847 16204 23617 13510 21943 1012 26041 21238 27880 27520 43187 2133 41729 17361 47970 36348 3984 36828 29402 37754 21699 7001 470 17763 3405 38869 3859 16781 23352 45680 29619 26401 22941 28432 41868 45040 27645 46157 20183 46396 4476 18675 44881 41594 32272 38147 38477 35655 29910 21585 10255 21248 44030 21927 36754 15128 14714 18705 ...",
  "accepted#114": "true",
  "accepted#117": "true",
  "input#49": "70000 11300\r\n16843 35911 64878 68223 7879 28125 22193 56031 26690 55621 46375 26339 60819 9929 62532 61088 9032 52278 21759 57277 31665 64799 66481 59797 22002 49769 10250 57977 40853 44942 1516 69708 25510 42778 7134 12165 1509 705 31178 25120 44008 10103 35183 24493 54998 32598 31951 33136 3437 14700 11986 8799 67356 40986 43842 14376 32266 64438 42413 10824 18989 69066 50231 32052 50084 44786 40261 46260 7630 18546 62834 30355 37921 44350 25038 14641 44308 35873 23194 56209 61940 56471 5565 22715 12035 ...",
  "accepted#116": "true",
  "input#44": "20000 11300\r\n10287 5948 5752 14826 10969 15765 9754 17017 13883 5107 10871 12995 9958 3890 10531 150 13966 15956 9395 134 13644 18078 16707 10122 4858 16953 10895 1693 26 9586 11834 15358 848 2618 3594 48 13443 38 16809 17243 64 7440 10598 7977 13815 1620 14834 3530 4700 11060 292 8305 9031 693 12469 4980 17684 11936 6437 19023 12516 16130 2164 12834 19931 6860 8713 18351 19200 15219 7343 18653 7647 14449 7219 13528 7370 9474 15239 19758 14868 10312 17730 2131 19541 1352 126 8030 3049 14059 18553 5002 1371...",
  "accepted#119": "true",
  "input#43": "10000 11300\r\n406 467 9790 3283 7935 9351 2943 4053 80 1302 173 1785 7706 3739 6534 3556 2467 692 3383 9599 1012 1572 1238 3701 3404 2931 105 2168 6427 217 4844 3003 7512 3286 751 6681 6428 5742 2614 749 7573 6069 439 456 1956 9479 2815 1583 927 2819 4334 5690 1312 4634 5382 3478 931 6949 2944 6068 8140 5949 3527 6424 7359 6193 26 5578 7078 8931 462 1368 5567 8443 3738 387 6523 7331 8570 6333 913 7433 3325 8337 5880 6064 9303 3035 32 7247 8096 4876 8650 624 610 8856 9883 1394 9774 7047 1134 1144 6232 695 22...",
  "accepted#118": "true",
  "input#46": "40000 11300\r\n7073 13933 36590 22105 21355 22386 14864 22946 38385 32717 31178 15414 31359 28386 1629 15226 35749 19189 11019 39990 37691 15282 8860 1749 31959 17702 25178 23720 35736 16835 3924 36964 24415 4384 23199 10975 6673 23223 6288 22935 25046 30182 7811 38827 4829 17391 7383 11616 36438 16055 21808 5149 5686 20106 38260 15279 36599 13397 33422 20742 28565 14059 20527 17142 5074 15490 31495 20919 2354 15091 18000 30118 16000 14845 19588 32514 29064 37954 38178 27823 2778 14856 2349 25526 38350 23417...",
  "input#45": "30000 11300\r\n5976 2645 4819 562 29810 29076 20757 19982 390 28912 24673 4205 19106 8234 20336 14040 4250 11221 18111 12158 20867 18776 687 25328 10505 23679 11684 22707 2137 11659 14231 11905 1079 15053 1844 10312 10058 8927 17900 16441 29851 18811 23460 21306 2970 17953 29557 6965 29961 9302 23146 16727 19455 26752 28069 23777 24438 8411 29930 17787 16892 25094 27697 732 22502 27527 20104 19635 4425 1507 28416 22833 23920 24647 26107 26669 921 15810 28805 21695 18823 14680 12136 14437 27393 26640 20949 27...",
  "input#40": "8000 100\r\n7990 4432 5901 5019 423 1200 7760 5752 7422 4337 4802 2570 7354 4912 2185 2344 6538 2783 1473 5311 3987 4739 7159 1677 3438 502 2800 1318 5223 4518 4448 6451 3455 5012 1588 814 4971 5847 3849 6248 6420 3607 2610 6852 1045 3730 757 6905 5248 3738 2382 7251 1305 7380 2476 7346 5721 5946 7599 5321 620 3802 5744 3744 2548 6230 5241 7059 6020 7842 7816 466 3109 2953 1361 7583 4884 6377 3257 3410 4482 7538 7452 1880 1043 6250 263 6192 5664 4972 6334 4333 1013 5476 2872 7095 2259 4949 5342 2185\r\n",
  "input#42": "10000 100\r\n4544 8312 5862 939 8211 3380 6031 1809 403 6481 9611 1867 3995 2475 8463 6414 8437 1439 7839 417 116 9582 9111 4367 876 1230 5526 4297 4180 5768 9854 1538 8763 4843 5654 5489 9872 584 6600 9378 6633 1476 3123 6181 7533 1721 6122 4206 5642 868 6802 3699 6240 3033 9960 9921 6371 699 6633 6376 7453 6228 617 9754 9977 5875 8269 4880 73 3129 6048 1797 8514 5595 1122 889 2011 7363 8276 8031 3602 207 6829 9279 3398 3136 3032 1013 9246 6893 4900 2208 2288 9614 5923 9876 2283 2657 4523 5304\r\n",
  "input#41": "9000 100\r\n468 4494 1974 6298 8307 5060 942 191 7166 3427 3339 8189 7463 4530 8935 770 4482 6531 6250 116 8666 5004 3176 8194 2491 1815 7670 8249 6493 5105 177 5456 6056 742 7663 3052 8378 7844 2963 3733 1874 3603 6693 8959 8289 6644 224 314 7196 2535 4203 6147 6539 3971 1097 201 6037 8354 1216 3360 4602 6026 5110 1233 6375 3829 1375 1904 806 5857 2624 4341 7835 3409 5648 428 7392 8931 6905 4741 2202 4881 20 6852 7393 1000 6082 130 1780 2283 7099 3242 8507 3584 5019 5037 3683 3026 1912 6687\r\n",
  "accepted#111": "true",
  "accepted#110": "true",
  "accepted#113": "true",
  "accepted#112": "true",
  "checkerStdoutAndStderr#103": "ok answer is \u0027400000000\u0027\r\n",
  "checkerStdoutAndStderr#104": "ok answer is \u0027900000000\u0027\r\n",
  "checkerStdoutAndStderr#101": "ok answer is \u00279997184329\u0027\r\n",
  "checkerStdoutAndStderr#102": "ok answer is \u002756663011\u0027\r\n",
  "checkerStdoutAndStderr#107": "ok answer is \u00273558091120\u0027\r\n",
  "checkerStdoutAndStderr#108": "ok answer is \u00274900000000\u0027\r\n",
  "checkerStdoutAndStderr#105": "ok answer is \u00271600000000\u0027\r\n",
  "checkerStdoutAndStderr#106": "ok answer is \u00272115816852\u0027\r\n",
  "checkerStdoutAndStderr#100": "ok answer is \u00278100000000\u0027\r\n",
  "input#59": "100000 2\r\n46680 84411\r\n",
  "accepted#104": "true",
  "input#58": "100000 1\r\n63256\r\n",
  "accepted#103": "true",
  "accepted#106": "true",
  "accepted#105": "true",
  "input#55": "52300 80000\r\n17507 10514 15183 7869 31582 40500 51494 30683 12593 37970 19774 25534 3505 12951 7806 2881 21632 48258 11454 18947 46495 29501 48522 40485 19980 4587 2605 21856 14116 10847 2954 3457 27538 19870 32359 9094 38386 9101 41221 2628 19555 8332 29489 6011 32253 47413 25318 21144 50492 39439 40929 52152 23791 16099 1024 2330 49503 50875 9275 21561 45517 38226 22754 49659 44675 21221 22780 13519 11435 30245 26061 38992 24130 154 40394 10476 35635 4373 50812 15190 49794 20544 26965 40456 35206 5929 34...",
  "accepted#108": "true",
  "input#54": "52300 70000\r\n8461 43141 6421 51996 12106 41016 4838 9601 46554 16726 25280 46093 48486 23634 31279 23735 27014 34713 29802 23261 11585 12922 44561 18077 9259 6526 22689 17186 7390 2272 49259 2620 16329 7062 51433 47023 48548 50594 22228 44017 52070 35178 25501 49332 20046 12777 50200 36489 11571 48991 43340 34320 4795 3953 33133 32009 22248 7167 13664 20444 42078 16652 11118 394 29490 1493 2082 8581 45683 11054 8342 29776 14951 33624 39534 25589 46790 44058 3662 3234 26763 12420 16334 29688 34642 38690 131...",
  "accepted#107": "true",
  "input#57": "52300 100000\r\n13911 15644 29281 18667 21559 38763 9343 43310 28758 26259 37963 4844 19072 6841 17470 49298 37025 44036 47354 4011 35872 22047 51181 30682 48009 17873 26116 47853 25052 4063 29809 9859 9100 37714 8509 37871 18273 7494 36383 31366 3870 45920 28523 2161 40860 33726 37392 36176 9756 33037 6526 38185 25357 41378 29669 1503 21284 41694 23080 41099 26750 2660 40571 6583 36990 26723 41974 44942 29552 43681 5832 17605 12999 23525 36020 23033 46056 1138 4835 12722 40077 25554 27632 46325 12627 8824 5...",
  "input#56": "52300 90000\r\n33160 10188 17336 29346 5365 988 45849 51765 30933 6914 7572 50667 30824 2268 16720 15243 42858 48498 45407 8024 29104 7084 183 17202 17397 9344 14821 13222 930 45113 15645 43289 38747 26070 6589 43465 41527 26516 7914 26842 12732 47091 1090 47291 18769 36357 39432 39015 30506 49887 31822 36768 42788 8334 21214 38255 24458 35587 50578 16070 35652 34108 21085 40016 20864 14341 36871 50845 36184 17135 37085 34904 20006 32288 41254 27663 5396 10381 6667 27146 7220 22059 5208 5620 42377 32075 4239...",
  "accepted#109": "true",
  "input#51": "52300 40000\r\n7104 43204 6657 46474 31761 41648 1860 50954 17227 25295 16105 29689 52133 48987 36924 6560 29856 14079 13460 49420 18153 47784 13594 22236 29395 18951 18340 16479 32815 16549 17882 40023 15003 34153 10840 29603 26736 37258 43330 23762 12715 50111 6927 29177 41503 20253 40246 22701 19229 31040 44880 33951 6803 13946 38164 9750 5998 642 26742 43612 6068 3314 9429 29410 29539 27914 51193 33679 30432 37995 8401 48649 20629 16129 17870 31932 14739 32730 51410 26273 29972 13740 42522 16381 19734 12...",
  "input#50": "52300 30000\r\n43750 16922 4503 24997 5677 28860 7504 43175 12191 43048 34915 11252 31510 7370 21401 806 21934 46226 51720 8042 35544 31205 22937 52128 18674 27498 51727 11808 46001 7975 5191 39187 10402 21345 49914 1928 23594 19844 24337 12851 45230 11352 2938 26893 15992 44613 12828 31438 25912 27288 40683 29422 40107 21712 37885 433 31043 22538 31131 42495 15933 20737 11098 45748 14354 34794 37102 35349 18987 25413 42982 437 24753 10603 30313 47045 5982 26722 43255 27621 6942 5616 31891 51217 25866 38704 ...",
  "input#53": "52300 60000\r\n31803 30163 4268 23823 25019 14924 42871 40818 14910 2179 44089 20960 34471 34317 9061 11373 19092 27864 15761 34183 22368 35339 8212 34665 37534 8465 10472 25819 39660 394 23264 15088 11729 39858 38208 19349 45407 39788 48927 13195 25677 9723 21512 47048 33530 50441 36086 25226 31557 31935 20059 36399 31491 11719 26246 9388 1600 29062 11357 39238 38639 20770 12787 16732 20913 8373 33683 16947 20934 37468 17231 1477 19076 14794 6286 40702 51337 38050 47807 11190 17037 43292 44699 44612 27470 1...",
  "checkerStdoutAndStderr#109": "ok answer is \u00276400000000\u0027\r\n",
  "input#52": "52300 50000\r\n22758 3881 2114 2346 12240 2136 48515 19736 48871 33235 10599 2522 13848 45000 45838 18922 24474 27623 47413 45105 39759 18760 4251 51253 40117 17012 43860 21149 39542 18427 23877 27556 39516 40353 50674 43974 16573 9069 29935 2284 19196 23265 10915 44765 14715 9197 8668 33964 51543 34792 15861 31871 25799 6180 6055 32371 26645 44350 15745 38121 48504 38192 21064 26375 44724 47642 19592 25313 9489 11582 12816 5565 29808 48263 18730 16819 3584 45346 7264 38229 703 35168 14156 40452 20298 38697 ...",
  "accepted#100": "true",
  "accepted#102": "true",
  "accepted#101": "true",
  "verdict#130": "OK",
  "verdict#131": "OK",
  "verdict#132": "OK",
  "timeConsumed#86": "0",
  "input#69": "10 20000\r\n5 8 8 1 9 10 7 9 9 2 4 5 8 3 7 4 2 9 7 8 5 4 4 5 6 5 7 4 2 4 4 3 6 9 2 9 4 6 6 1 8 8 8 3 2 9 6 4 8 10 5 3 4 2 1 3 9 7 5 8 3 10 10 7 7 6 2 2 7 9 2 3 9 2 7 3 5 6 4 8 1 5 4 9 4 5 6 9 9 4 4 3 10 2 3 1 5 9 10 10 6 10 10 5 6 7 4 10 5 2 6 4 7 8 10 9 4 5 10 7 1 1 5 2 9 6 3 3 6 4 7 5 8 6 8 5 5 1 4 10 10 8 5 4 9 7 7 10 8 8 1 3 2 5 7 9 5 5 9 3 2 7 5 2 10 1 6 3 8 8 10 6 7 1 9 10 2 3 4 8 10 9 1 2 4 6 4 7 6 2 10 4 3 4 6 4 8 7 9 7 7 7 4 4 9 5 8 10 6 7 10 4 9 6 1 9 9 6 2 3 1 9 2 10 10 10 5 9 4 2 3 8 3 1 1 8 4 8 ...",
  "timeConsumed#87": "15",
  "timeConsumed#88": "15",
  "timeConsumed#89": "15",
  "input#66": "100000 9\r\n96057 12530 96414 43360 31434 80239 8416 37879 56578\r\n",
  "timeConsumed#82": "15",
  "input#65": "100000 8\r\n79929 87878 83156 81178 82181 77270 36433 21187\r\n",
  "timeConsumed#83": "15",
  "input#68": "10 10000\r\n10 10 5 2 2 6 8 7 9 10 10 4 9 4 3 9 10 9 8 4 8 1 7 9 9 4 1 8 6 6 9 7 6 8 8 4 2 6 5 10 3 4 9 10 8 9 8 1 10 8 7 6 2 8 8 2 4 5 4 1 3 8 9 2 10 7 3 6 10 5 3 2 4 8 10 10 2 10 4 3 5 7 1 1 2 8 6 10 1 2 5 4 1 4 5 3 3 3 10 2 1 5 7 3 8 8 10 5 9 8 2 10 3 9 10 6 3 9 4 1 3 7 5 8 9 7 7 1 1 8 6 4 2 9 1 3 6 6 4 10 9 3 6 4 4 7 2 8 10 8 5 6 7 8 9 8 1 5 1 4 10 5 4 4 5 5 6 4 4 3 10 3 7 3 7 3 8 5 2 1 9 10 7 4 9 4 7 10 1 2 8 8 10 6 4 7 6 6 9 6 6 3 2 2 6 5 10 10 9 1 3 5 3 3 4 1 4 2 1 2 6 7 9 3 5 4 1 4 10 4 8 9 9 8 10 7 ...",
  "timeConsumed#84": "0",
  "input#67": "100000 10\r\n13202 14678 45343 53910 34297 96330 24175 45117 25650 55090\r\n",
  "timeConsumed#85": "30",
  "input#62": "100000 5\r\n29657 41344 93111 68553 91316\r\n",
  "input#61": "100000 4\r\n46233 25204 79854 39075\r\n",
  "input#64": "100000 7\r\n29209 71737 78411 51700 57119 31198 40258\r\n",
  "timeConsumed#80": "15",
  "input#63": "100000 6\r\n13081 90189 97857 54927 7866 52421\r\n",
  "timeConsumed#81": "15",
  "input#60": "100000 3\r\n62808 76360 42404\r\n",
  "verdict#120": "OK",
  "verdict#121": "OK",
  "verdict#122": "OK",
  "verdict#127": "OK",
  "verdict#128": "OK",
  "verdict#129": "OK",
  "timeConsumed#79": "15",
  "verdict#123": "OK",
  "verdict#124": "OK",
  "verdict#125": "OK",
  "verdict#126": "OK",
  "timeConsumed#75": "46",
  "timeConsumed#76": "46",
  "timeConsumed#77": "46",
  "timeConsumed#78": "0",
  "timeConsumed#71": "15",
  "input#77": "10 100000\r\n
  "timeConsumed#72": "31",
  "input#76": "10 90000\r\n9 3 7 5 8 6 8 1 2 4 8 10 1 9 2 5 5 5 5 6 8 7 5 1 10 2 3 10 7 7 6 8 4 8 4 7 7 5 4 4 8 9 7 1 9 3 8 9 8 4 7 3 2 9 3 9 10 5 4 10 1 2 6 1 3 10 1 10 9 4 8 7 7 2 6 10 4 9 3 7 6 8 6 9 9 1 3 2 5 4 1 6 6 4 9 2 9 7 6 8 10 5 4 3 6 10 5 7 4 4 1 1 7 8 7 1 10 3 4 9 1 5 8 5 4 2 7 7 9 4 7 3 1 8 9 1 8 10 8 9 8 3 10 5 7 10 3 7 3 5 1 5 6 3 8 1 4 4 4 8 3 3 10 9 2 6 8 9 8 7 9 4 6 6 5 4 10 8 2 1 10 6 6 5 4 5 1 6 9 8 6 8 9 9 4 2 5 5 4 9 9 6 5 7 10 9 6 3 10 3 8 10 1 3 3 2 9 5 7 9 5 8 7 6 4 6 6 6 7 10 3 6 7 6 9 1 5 7 4 6 ...",
  "timeConsumed#73": "31",
  "input#79": "4 10\r\n1 1 1 1 1 1 1 1 1 3\r\n",
  "timeConsumed#74": "31",
  "input#78": "3 10\r\n3 3 3 3 3 3 3 3 3 3\r\n",
  "input#73": "10 60000\r\n6 5 5 6 7 8 7 4 1 3 3 6 4 6 9 9 3 10 3 9 6 1 10 4 6 7 2 9 7 2 3 7 2 5 5 6 4 3 5 1 2 2 9 4 4 7 8 5 7 3 3 10 4 3 2 2 9 10 4 6 7 9 7 9 3 3 2 2 3 1 5 10 1 7 1 7 3 2 7 6 3 2 7 1 5 1 4 2 3 8 1 1 5 1 6 8 1 6 4 4 2 2 3 5 1 1 7 3 5 10 7 5 7 9 6 3 2 8 9 6 2 8 10 1 6 7 9 4 6 3 4 10 8 10 1 1 3 2 4 1 3 1 2 1 3 9 1 2 2 2 6 4 4 9 7 4 4 8 10 10 7 4 9 1 6 6 6 9 4 6 10 8 7 3 2 2 3 8 4 9 3 9 6 1 10 7 10 1 5 2 1 6 1 9 9 1 8 1 8 9 10 4 2 2 7 1 4 9 9 3 7 1 9 7 7 3 9 6 8 2 8 5 2 3 10 5 4 5 2 7 6 7 6 9 4 9 6 6 3 4 1 7 5...",
  "input#72": "10 50000\r\n2 3 5 4 3 4 2 6 8 9 3 5 1 9 10 4 1 2 2 3 3 6 9 2 5 10 2 5 9 10 8 10 3 5 1 2 6 8 3 8 3 8 2 6 2 7 6 2 7 1 8 4 2 5 1 9 6 2 1 9 6 3 10 5 4 5 3 8 4 8 10 4 1 3 1 10 6 4 6 6 6 8 2 1 2 4 5 3 9 4 4 10 6 7 6 6 9 10 3 10 9 1 9 9 1 6 2 8 2 5 5 6 7 4 7 5 3 2 4 3 8 8 3 7 9 1 10 2 4 1 5 1 1 4 6 4 4 3 8 2 9 6 3 7 5 8 5 6 9 2 6 5 4 3 9 3 6 2 3 1 6 6 6 4 3 4 2 9 6 1 10 9 6 8 10 6 9 8 2 4 1 10 2 7 2 4 5 8 10 8 10 7 2 1 7 5 6 8 4 5 2 9 4 9 4 5 5 9 3 9 1 3 8 6 6 10 10 5 1 4 8 3 1 3 8 9 4 10 2 5 10 10 10 7 2 4 3 9 2 6...",
  "input#75": "10 80000\r\n5 6 10 8 9 8 2 3 3 4 8 10 2 2 10 1 3 4 4 4 5 4 8 9 9 9 5 10 9 7 1 5 3 3 4 2 9 4 3 4 7 5 4 7 7 3 10 2 8 8 2 3 2 4 10 4 9 6 9 3 2 9 5 5 4 6 2 6 4 1 5 10 5 7 9 3 1 2 4 1 9 4 1 7 5 4 4 9 1 1 10 1 7 10 3 10 7 5 2 2 9 4 10 1 7 7 8 6 4 9 9 2 5 3 4 2 1 7 2 3 4 2 6 7 6 10 3 1 3 8 6 2 4 7 4 4 7 2 10 10 1 10 5 1 5 9 3 7 4 5 4 4 2 9 6 8 6 8 9 4 2 9 10 7 7 10 6 1 7 2 1 9 6 2 5 5 5 4 10 7 7 7 8 1 7 4 4 8 7 10 6 1 6 1 4 8 7 7 3 10 6 1 7 8 7 4 8 3 3 7 2 6 10 2 10 1 10 8 6 5 2 7 9 9 1 10 2 8 7 8 3 1 2 3 5 6 1 9 8...",
  "timeConsumed#70": "31",
  "input#74": "10 70000\r\n2 4 8 3 10 10 3 10 1 10 4 5 9 5 1 7 1 5 1 6 5 5 7 3 7 8 5 9 7 2 10 9 10 9 4 1 7 4 10 1 2 1 7 7 5 7 6 7 5 7 7 2 10 6 3 3 4 4 5 4 6 7 2 4 2 3 1 2 7 1 6 8 6 7 1 10 8 4 1 4 9 10 8 3 7 7 4 4 3 9 3 6 10 2 4 7 5 10 9 2 7 7 8 1 6 4 3 10 1 4 7 4 1 10 8 6 4 3 7 8 10 2 6 3 4 2 3 8 8 8 8 3 4 1 2 6 4 7 4 1 4 9 7 1 2 8 6 9 6 7 8 1 7 3 7 2 2 2 10 2 8 3 9 2 4 9 4 6 5 2 1 10 7 7 8 9 1 10 6 6 10 8 4 9 7 4 7 5 2 3 7 10 8 7 7 2 3 2 9 10 5 8 9 4 4 10 3 7 6 3 3 3 6 10 9 5 4 8 5 3 3 7 6 10 3 10 8 3 6 2 6 2 6 1 5 2 4 4 ...",
  "input#71": "10 40000\r\n5 5 4 5 8 2 2 4 8 5 5 6 6 8 8 6 2 7 4 1 3 7 2 2 8 3 10 4 3 3 3 2 8 7 1 7 5 8 4 4 8 3 3 3 5 3 8 9 10 5 5 1 2 5 5 5 1 10 6 4 7 5 8 10 1 4 2 4 1 8 10 1 4 6 9 3 3 8 10 4 6 5 9 5 10 8 1 6 1 7 7 9 7 3 8 9 1 6 10 6 8 8 2 9 2 3 6 7 8 2 2 8 3 3 5 10 7 4 3 7 8 4 7 7 9 10 10 10 10 5 5 9 5 7 4 7 5 8 8 1 2 7 8 7 6 7 10 4 5 4 9 4 9 9 5 5 1 1 8 7 4 8 6 4 1 1 8 6 5 3 9 10 6 10 2 5 4 4 4 4 4 5 3 3 1 6 8 6 5 1 4 6 8 10 9 10 8 7 4 6 1 5 6 7 9 2 6 4 4 3 8 4 3 5 9 8 4 1 4 4 9 1 7 6 5 9 1 2 6 3 9 10 5 5 6 6 5 7 6 1 4 ...",
  "input#70": "10 30000\r\n9 8 10 8 1 4 7 1 3 2 5 4 3 1 3 2 10 6 7 3 4 4 5 4 7 2 3 4 7 5 5 6 9 7 1 2 7 7 9 3 7 5 5 5 9 3 4 7 8 5 6 5 10 10 4 4 2 5 2 7 8 4 1 5 2 4 3 10 2 6 7 9 9 2 9 10 8 10 9 8 9 9 9 7 8 5 5 8 7 1 6 4 7 9 9 2 9 4 7 10 7 3 8 7 7 6 1 1 2 7 10 7 5 2 2 8 8 9 7 2 5 1 7 6 5 4 6 5 8 9 5 10 9 6 9 2 6 10 2 3 1 7 10 3 8 8 9 6 7 4 3 1 6 9 7 9 3 5 8 5 7 1 5 3 2 10 10 6 7 2 9 5 7 4 1 6 2 7 2 7 7 8 9 5 10 5 1 3 2 7 5 3 1 2 2 4 6 2 3 1 10 2 8 9 2 8 7 10 7 5 6 2 10 8 2 1 1 7 3 5 10 1 4 9 2 6 7 7 6 4 3 7 9 3 1 1 8 2 9 7 2 ...",
  "checkerExitCode#1": "0",
  "checkerExitCode#2": "0",
  "timeConsumed#68": "15",
  "timeConsumed#69": "31",
  "timeConsumed#64": "0",
  "timeConsumed#65": "15",
  "timeConsumed#66": "15",
  "timeConsumed#67": "15",
  "timeConsumed#60": "0",
  "input#88": "30000 1100\r\n
  "timeConsumed#61": "31",
  "input#87": "20000 1100\r\n
  "timeConsumed#62": "15",
  "timeConsumed#63": "15",
  "input#89": "40000 1100\r\n
  "checkerExitCode#3": "0",
  "input#84": "9 10\r\n8 8 8 8 8 8 8 8 8 5\r\n",
  "checkerExitCode#4": "0",
  "input#83": "8 10\r\n7 7 7 7 7 7 7 7 7 2\r\n",
  "checkerExitCode#5": "0",
  "input#86": "10000 1100\r\n
  "checkerExitCode#6": "0",
  "input#85": "10 10\r\n9 9 9 9 9 9 9 9 9 6\r\n",
  "checkerExitCode#7": "0",
  "input#80": "5 10\r\n2 2 2 2 2 2 2 2 2 2\r\n",
  "checkerExitCode#8": "0",
  "checkerExitCode#9": "0",
  "input#82": "7 10\r\n2 2 2 2 2 2 2 2 2 1\r\n",
  "input#81": "6 10\r\n4 4 4 4 4 4 4 4 4 1\r\n",
  "timeConsumed#57": "109",
  "timeConsumed#58": "0",
  "timeConsumed#59": "0",
  "timeConsumed#53": "62",
  "timeConsumed#54": "77",
  "timeConsumed#55": "93",
  "timeConsumed#56": "78",
  "input#99": "80000 100000\r\n
  "timeConsumed#50": "46",
  "input#98": "70000 100000\r\n
  "timeConsumed#51": "46",
  "timeConsumed#52": "31",
  "input#95": "40000 100000\r\n
  "input#94": "30000 100000\r\n
  "input#97": "60000 100000\r\n
  "input#96": "50000 100000\r\n
  "input#91": "60000 1100\r\n54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 54353 5...",
  "input#90": "50000 1100\r\n
  "input#93": "20000 100000\r\n
  "input#92": "70000 1100\r\n15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 15637 1...",
  "rejected#92": "false",
  "rejected#93": "false",
  "rejected#90": "false",
  "source": "//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC optimization(\"unroll-loops, no-stack-protector\")\n//#pragma GCC target(\"avx,avx2,fma\")\n\n#include \u003cbits/stdc++.h\u003e\n#include \u003cext/pb_ds/assoc_container.hpp\u003e\n#include \u003cext/pb_ds/tree_policy.hpp\u003e\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n// Template from https://github.com/kth-competitive-programming/kactl/blob/master/content/contest/template.cpp\n#define rep(i, a, b) for(int (i) \u003d a; (i) \u003c (b); ++(i))\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair\u003cint, int\u003e pii;\ntypedef vector\u003cint\u003e vi;\n#define double long double\n#define order_set tree\u003cint, null_type, less\u003c\u003e, rb_tree_tag, tree_order_statistics_node_update\u003e\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntypedef vector\u003cvector\u003cll\u003e\u003e matrix;\n\nconst int N \u003d 1e5 + 5;\nint n, m, a[N], l[N], r[N], dp[N];\n\nint solveTestCase() {\n    cin \u003e\u003e n \u003e\u003e m;\n    rep (i, 0, m) cin \u003e\u003e a[i], a[i]--;\n    \n    if (n \u003d\u003d 1)\n        return cout \u003c\u003c \"0\", 0;\n\n    map\u003cint, int\u003e next;\n    for (int i \u003d m - 1; i \u003e\u003d 0; i--) {\n        if (next.find(a[i] - i - 1) !\u003d next.end())\n            dp[i] \u003d dp[next[a[i] - i - 1]] + 1;\n        else\n            dp[i] \u003d 1;\n        next[a[i] - i] \u003d i;\n    }\n\n    rep (i, 0, n) {\n        if (next.find(i + 1) !\u003d next.end())\n            r[i] \u003d i + m + 1 - dp[next[i + 1]];\n        else\n            r[i] \u003d i + m + 1;\n        r[i] \u003d min(r[i], n - 1);\n    }\n\n    next.clear();\n    for (int i \u003d m - 1; i \u003e\u003d 0; i--) {\n        if (next.find(a[i] + i + 1) !\u003d next.end())\n            dp[i] \u003d dp[next[a[i] + i + 1]] + 1;\n        else\n            dp[i] \u003d 1;\n        next[a[i] + i] \u003d i;\n    }\n\n    rep (i, 0, n) {\n        if (next.find(i - 1) !\u003d next.end())\n            l[i] \u003d i - m - 1 + dp[next[i - 1]];\n        else\n            l[i] \u003d i - m - 1;\n        l[i] \u003d max(l[i], 0);\n    }\n\n    ll ans \u003d 0;\n    rep (i, 0, n)\n        ans +\u003d r[i] - l[i] + 1;\n    cout \u003c\u003c ans;\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cout.precision(18);\n\n    int t \u003d 1;\n    // cin \u003e\u003e t;\n    while (t--)\n        solveTestCase();\n}",
  "rejected#91": "false",
  "checkerExitCode#101": "0",
  "checkerExitCode#100": "0",
  "rejected#89": "false",
  "checkerExitCode#103": "0",
  "checkerExitCode#102": "0",
  "rejected#87": "false",
  "checkerExitCode#105": "0",
  "rejected#88": "false",
  "checkerExitCode#104": "0",
  "rejected#85": "false",
  "checkerExitCode#107": "0",
  "rejected#86": "false",
  "checkerExitCode#106": "0",
  "rejected#83": "false",
  "checkerExitCode#109": "0",
  "rejected#84": "false",
  "checkerExitCode#108": "0",
  "rejected#81": "false",
  "rejected#82": "false",
  "rejected#80": "false",
  "rejected#78": "false",
  "rejected#79": "false",
  "rejected#76": "false",
  "rejected#77": "false",
  "rejected#74": "false",
  "rejected#75": "false",
  "rejected#72": "false",
  "rejected#73": "false",
  "verdict#110": "OK",
  "verdict#111": "OK",
  "verdict#116": "OK",
  "verdict#117": "OK",
  "verdict#118": "OK",
  "verdict#119": "OK",
  "verdict#112": "OK",
  "verdict#113": "OK",
  "verdict#114": "OK",
  "verdict#115": "OK",
  "verdict#100": "OK",
  "verdict#105": "OK",
  "verdict#106": "OK",
  "verdict#107": "OK",
  "verdict#108": "OK",
  "verdict#101": "OK",
  "verdict#102": "OK",
  "verdict#103": "OK",
  "verdict#104": "OK",
  "timeConsumed#97": "93",
  "timeConsumed#98": "93",
  "rejected#98": "false",
  "timeConsumed#99": "78",
  "rejected#99": "false",
  "timeConsumed#93": "62",
  "rejected#96": "false",
  "verdict#109": "OK",
  "timeConsumed#94": "93",
  "rejected#97": "false",
  "rejected#94": "false",
  "timeConsumed#95": "93",
  "rejected#95": "false",
  "timeConsumed#96": "93",
  "timeConsumed#90": "0",
  "timeConsumed#91": "15",
  "timeConsumed#92": "15",
  "rejected#45": "false",
  "rejected#46": "false",
  "rejected#43": "false",
  "rejected#44": "false",
  "rejected#41": "false",
  "rejected#42": "false",
  "rejected#40": "false",
  "partyName": "\u003cspan title\u003d\"Candidate Master DS007\" class\u003d\"rated-user user-violet\"\u003eDS007\u003c/span\u003e",
  "rejected#49": "false",
  "rejected#47": "false",
  "rejected#48": "false",
  "rejected#34": "false",
  "rejected#35": "false",
  "rejected#32": "false",
  "rejected#33": "false",
  "rejected#30": "false",
  "memoryConsumed#132": "5328896",
  "rejected#31": "false",
  "memoryConsumed#130": "5791744",
  "memoryConsumed#131": "5836800",
  "rejected#38": "false",
  "rejected#39": "false",
  "rejected#36": "false",
  "rejected#37": "false",
  "offerChallenge": "false",
  "rejected#70": "false",
  "rejected#71": "false",
  "rejected#67": "false",
  "rejected#68": "false",
  "rejected#65": "false",
  "rejected#66": "false",
  "rejected#63": "false",
  "memoryConsumed#121": "8736768",
  "rejected#64": "false",
  "memoryConsumed#122": "5525504",
  "rejected#61": "false",
  "rejected#62": "false",
  "memoryConsumed#120": "8122368",
  "memoryConsumed#125": "5623808",
  "memoryConsumed#126": "5652480",
  "memoryConsumed#123": "5607424",
  "memoryConsumed#124": "5603328",
  "memoryConsumed#129": "5779456",
  "rejected#69": "false",
  "memoryConsumed#127": "5734400",
  "memoryConsumed#128": "5713920",
  "rejected#105": "false",
  "rejected#104": "false",
  "rejected#107": "false",
  "memoryConsumed#109": "8069120",
  "rejected#106": "false",
  "rejected#109": "false",
  "rejected#108": "false",
  "rejected#60": "false",
  "rejected#56": "false",
  "rejected#57": "false",
  "rejected#54": "false",
  "rejected#55": "false",
  "rejected#52": "false",
  "memoryConsumed#110": "8802304",
  "rejected#53": "false",
  "memoryConsumed#111": "8470528",
  "rejected#50": "false",
  "rejected#51": "false",
  "memoryConsumed#114": "6553600",
  "memoryConsumed#115": "6807552",
  "memoryConsumed#112": "5894144",
  "memoryConsumed#113": "6144000",
  "rejected#101": "false",
  "memoryConsumed#118": "7593984",
  "rejected#100": "false",
  "memoryConsumed#119": "8134656",
  "rejected#58": "false",
  "rejected#103": "false",
  "memoryConsumed#116": "7139328",
  "rejected#59": "false",
  "rejected#102": "false",
  "memoryConsumed#117": "7421952",
  "rejected#116": "false",
  "rejected#115": "false",
  "rejected#118": "false",
  "rejected#117": "false",
  "rejected#119": "false",
  "memoryConsumed#100": "7933952",
  "memoryConsumed#103": "8605696",
  "memoryConsumed#104": "8732672",
  "memoryConsumed#101": "8065024",
  "rejected#110": "false",
  "memoryConsumed#102": "8740864",
  "memoryConsumed#107": "8732672",
  "rejected#112": "false",
  "memoryConsumed#108": "8065024",
  "rejected#111": "false",
  "memoryConsumed#105": "7815168",
  "rejected#114": "false",
  "memoryConsumed#106": "8736768",
  "rejected#113": "false",
  "rejected#127": "false",
  "rejected#126": "false",
  "rejected#129": "false",
  "rejected#128": "false",
  "rejected#121": "false",
  "rejected#120": "false",
  "rejected#123": "false",
  "rejected#122": "false",
  "rejected#125": "false",
  "rejected#124": "false",
  "rejected#23": "false",
  "rejected#24": "false",
  "rejected#21": "false",
  "rejected#22": "false",
  "rejected#20": "false",
  "rejected#130": "false",
  "rejected#29": "false",
  "rejected#132": "false",
  "rejected#131": "false",
  "rejected#27": "false",
  "rejected#28": "false",
  "rejected#25": "false",
  "rejected#26": "false",
  "verdict#93": "OK",
  "verdict#94": "OK",
  "verdict#95": "OK",
  "verdict#96": "OK",
  "verdict#90": "OK",
  "verdict#91": "OK",
  "verdict#92": "OK",
  "verdict#97": "OK",
  "verdict#98": "OK",
  "verdict#99": "OK",
  "rejected#12": "false",
  "rejected#13": "false",
  "rejected#10": "false",
  "rejected#11": "false",
  "rejected#18": "false",
  "rejected#19": "false",
  "rejected#16": "false",
  "rejected#17": "false",
  "rejected#14": "false",
  "rejected#15": "false",
  "checkerStdoutAndStderr#22": "ok answer is \u002716\u0027\r\n",
  "checkerStdoutAndStderr#23": "ok answer is \u002725\u0027\r\n",
  "checkerStdoutAndStderr#20": "ok answer is \u00274\u0027\r\n",
  "checkerStdoutAndStderr#21": "ok answer is \u00279\u0027\r\n",
  "checkerStdoutAndStderr#26": "ok answer is \u002764\u0027\r\n",
  "exitCode#66": "0",
  "checkerStdoutAndStderr#27": "ok answer is \u002719\u0027\r\n",
  "exitCode#67": "0",
  "checkerStdoutAndStderr#24": "ok answer is \u002736\u0027\r\n",
  "exitCode#68": "0",
  "checkerStdoutAndStderr#25": "ok answer is \u002749\u0027\r\n",
  "exitCode#69": "0",
  "exitCode#62": "0",
  "exitCode#63": "0",
  "output#79": "16",
  "exitCode#64": "0",
  "exitCode#65": "0",
  "output#76": "100",
  "output#75": "100",
  "exitCode#60": "0",
  "output#78": "9",
  "exitCode#61": "0",
  "output#77": "100",
  "output#83": "59",
  "output#82": "45",
  "output#85": "93",
  "output#84": "75",
  "output#81": "29",
  "output#80": "19",
  "input#107": "60000 100000\r\n
  "input#106": "50000 100000\r\n
  "checkerStdoutAndStderr#28": "ok answer is \u002722\u0027\r\n",
  "input#105": "40000 100000\r\n
  "checkerStdoutAndStderr#29": "ok answer is \u002727\u0027\r\n",
  "input#104": "30000 100000\r\n
  "input#103": "20000 100000\r\n
  "input#102": "10000 100000\r\n
  "input#101": "100000 100000\r\n
  "input#100": "90000 100000\r\n
  "checkerStdoutAndStderr#11": "ok answer is \u00272132556044\u0027\r\n",
  "checkerStdoutAndStderr#12": "ok answer is \u0027946110646\u0027\r\n",
  "checkerStdoutAndStderr#10": "ok answer is \u00271906526250\u0027\r\n",
  "checkerStdoutAndStderr#15": "ok answer is \u00270\u0027\r\n",
  "exitCode#77": "0",
  "checkerStdoutAndStderr#16": "ok answer is \u00274\u0027\r\n",
  "exitCode#78": "0",
  "memoryConsumed#99": "8417280",
  "checkerStdoutAndStderr#13": "ok answer is \u00271692072230\u0027\r\n",
  "exitCode#79": "0",
  "memoryConsumed#98": "8728576",
  "checkerStdoutAndStderr#14": "ok answer is \u00279999999988\u0027\r\n",
  "memoryConsumed#97": "8736768",
  "output#69": "100",
  "exitCode#73": "0",
  "memoryConsumed#96": "8728576",
  "output#68": "100",
  "exitCode#74": "0",
  "memoryConsumed#95": "8728576",
  "exitCode#75": "0",
  "memoryConsumed#94": "8724480",
  "exitCode#76": "0",
  "memoryConsumed#93": "8716288",
  "output#65": "1899894",
  "memoryConsumed#92": "5529600",
  "output#64": "1699914",
  "exitCode#70": "0",
  "memoryConsumed#91": "5509120",
  "output#67": "2299848",
  "exitCode#71": "0",
  "memoryConsumed#90": "5529600",
  "output#66": "2099872",
  "exitCode#72": "0",
  "output#72": "100",
  "output#71": "100",
  "output#74": "100",
  "output#73": "100",
  "output#132": "499992",
  "output#70": "100",
  "output#131": "1872564845",
  "output#130": "1698969923",
  "checkerStdoutAndStderr#19": "ok answer is \u00270\u0027\r\n",
  "checkerStdoutAndStderr#17": "ok answer is \u00277\u0027\r\n",
  "checkerStdoutAndStderr#18": "ok answer is \u002714\u0027\r\n",
  "exitCode#88": "0",
  "memoryConsumed#89": "5521408",
  "memoryConsumed#88": "5521408",
  "exitCode#89": "0",
  "memoryConsumed#87": "5517312",
  "memoryConsumed#86": "5521408",
  "input#119": "100000 80000\r\n
  "exitCode#84": "0",
  "memoryConsumed#85": "5349376",
  "output#126": "958629152",
  "memoryConsumed#84": "5341184",
  "exitCode#85": "0",
  "output#125": "775955884",
  "memoryConsumed#83": "5337088",
  "exitCode#86": "0",
  "output#124": "585628184",
  "memoryConsumed#82": "5345280",
  "exitCode#87": "0",
  "output#123": "392295996",
  "exitCode#80": "0",
  "memoryConsumed#81": "5341184",
  "output#98": "4157262760",
  "memoryConsumed#80": "5328896",
  "exitCode#81": "0",
  "output#97": "3524117610",
  "output#129": "1520352446",
  "exitCode#82": "0",
  "output#128": "1337651201",
  "exitCode#83": "0",
  "output#99": "6371912224",
  "output#127": "1150912024",
  "input#121": "100000 100000\r\n
  "input#120": "100000 90000\r\n
  "output#122": "198297996",
  "output#121": "5916590859",
  "output#120": "9874754950",
  "input#129": "100000 8000\r\n96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 96408 ...",
  "input#128": "100000 7000\r\n
  "input#127": "100000 6000\r\n
  "input#126": "100000 5000\r\n
  "input#125": "100000 4000\r\n
  "input#124": "100000 3000\r\n
  "input#123": "100000 2000\r\n
  "input#122": "100000 1000\r\n
  "memoryConsumed#79": "5332992",
  "memoryConsumed#78": "5332992",
  "exitCode#99": "0",
  "memoryConsumed#77": "7610368",
  "memoryConsumed#76": "7409664",
  "input#109": "80000 100000\r\n
  "memoryConsumed#75": "7208960",
  "input#108": "70000 100000\r\n
  "memoryConsumed#74": "7008256",
  "exitCode#95": "0",
  "output#115": "5773823275",
  "memoryConsumed#73": "6819840",
  "exitCode#96": "0",
  "output#114": "4748660015",
  "memoryConsumed#72": "6549504",
  "exitCode#97": "0",
  "output#113": "3407342230",
  "memoryConsumed#71": "6356992",
  "exitCode#98": "0",
  "output#112": "1813969997",
  "memoryConsumed#70": "6152192",
  "output#87": "41637796",
  "exitCode#91": "0",
  "output#119": "8974233945",
  "output#86": "19607796",
  "exitCode#92": "0",
  "output#118": "8858746525",
  "output#89": "85697796",
  "exitCode#93": "0",
  "output#117": "8062898279",
  "output#88": "64284021",
  "exitCode#94": "0",
  "output#116": "7027256804",
  "output#94": "820196769",
  "input#110": "90000 100000\r\n
  "output#93": "400000000",
  "output#96": "1763625376",
  "exitCode#90": "0",
  "output#95": "1445157664",
  "output#90": "107727796",
  "output#111": "9993912275",
  "output#110": "7923846931",
  "output#92": "151787796",
  "output#91": "129757796",
  "input#118": "100000 70000\r\n21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745 21745...",
  "input#117": "100000 60000\r\n76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264 76264...",
  "input#116": "100000 50000\r\n
  "input#115": "100000 40000\r\n
  "input#114": "100000 30000\r\n
  "input#113": "100000 20000\r\n
  "input#112": "100000 10000\r\n
  "input#111": "100000 100000\r\n
  "exitCode#3": "0",
  "checkerStdoutAndStderr#66": "ok answer is \u00272099872\u0027\r\n",
  "exitCode#2": "0",
  "checkerStdoutAndStderr#67": "ok answer is \u00272299848\u0027\r\n",
  "exitCode#1": "0",
  "checkerStdoutAndStderr#64": "ok answer is \u00271699914\u0027\r\n",
  "memoryConsumed#69": "5931008",
  "checkerStdoutAndStderr#65": "ok answer is \u00271899894\u0027\r\n",
  "memoryConsumed#68": "5718016",
  "output#109": "6400000000",
  "exitCode#7": "0",
  "memoryConsumed#67": "5353472",
  "exitCode#6": "0",
  "output#39": "1410500",
  "memoryConsumed#66": "5349376",
  "exitCode#5": "0",
  "memoryConsumed#65": "5337088",
  "checkerStdoutAndStderr#68": "ok answer is \u0027100\u0027\r\n",
  "exitCode#4": "0",
  "memoryConsumed#64": "5341184",
  "checkerStdoutAndStderr#69": "ok answer is \u0027100\u0027\r\n",
  "output#36": "801509",
  "memoryConsumed#63": "5341184",
  "output#104": "900000000",
  "output#35": "598503",
  "memoryConsumed#62": "5332992",
  "output#103": "400000000",
  "output#38": "1207504",
  "memoryConsumed#61": "5345280",
  "output#102": "56663011",
  "output#37": "1004505",
  "memoryConsumed#60": "5349376",
  "output#101": "9997184329",
  "output#32": "44",
  "checkerStdoutAndStderr#62": "ok answer is \u00271299948\u0027\r\n",
  "output#108": "4900000000",
  "output#31": "37",
  "checkerStdoutAndStderr#63": "ok answer is \u00271499932\u0027\r\n",
  "output#107": "3558091120",
  "output#34": "395503",
  "checkerStdoutAndStderr#60": "ok answer is \u0027899974\u0027\r\n",
  "output#106": "2115816852",
  "output#33": "192528",
  "checkerStdoutAndStderr#61": "ok answer is \u00271099962\u0027\r\n",
  "output#105": "1600000000",
  "output#41": "1816501",
  "output#40": "1613498",
  "output#100": "8100000000",
  "checkerStdoutAndStderr#55": "ok answer is \u00272735290000\u0027\r\n",
  "checkerStdoutAndStderr#56": "ok answer is \u00272735290000\u0027\r\n",
  "memoryConsumed#59": "5337088",
  "checkerStdoutAndStderr#53": "ok answer is \u00272735290000\u0027\r\n",
  "memoryConsumed#58": "5341184",
  "checkerStdoutAndStderr#54": "ok answer is \u00272735290000\u0027\r\n",
  "memoryConsumed#57": "7745536",
  "output#29": "27",
  "memoryConsumed#56": "7544832",
  "checkerStdoutAndStderr#59": "ok answer is \u0027699984\u0027\r\n",
  "output#28": "22",
  "memoryConsumed#55": "7348224",
  "memoryConsumed#54": "7221248",
  "checkerStdoutAndStderr#57": "ok answer is \u00272735290000\u0027\r\n",
  "memoryConsumed#53": "6942720",
  "checkerStdoutAndStderr#58": "ok answer is \u0027499992\u0027\r\n",
  "output#25": "49",
  "memoryConsumed#52": "6823936",
  "output#24": "36",
  "memoryConsumed#51": "6475776",
  "output#27": "19",
  "memoryConsumed#50": "6340608",
  "output#26": "64",
  "output#21": "9",
  "checkerStdoutAndStderr#51": "ok answer is \u00272584018153\u0027\r\n",
  "output#20": "4",
  "checkerStdoutAndStderr#52": "ok answer is \u00272730002583\u0027\r\n",
  "output#23": "25",
  "output#22": "16",
  "checkerStdoutAndStderr#50": "ok answer is \u00272238041293\u0027\r\n",
  "output#30": "34",
  "exitCode#9": "0",
  "exitCode#8": "0",
  "checkerStdoutAndStderr#44": "ok answer is \u0027324326172\u0027\r\n",
  "memoryConsumed#49": "5894144",
  "checkerStdoutAndStderr#45": "ok answer is \u0027550351839\u0027\r\n",
  "memoryConsumed#48": "5890048",
  "checkerStdoutAndStderr#42": "ok answer is \u00272019503\u0027\r\n",
  "memoryConsumed#47": "5890048",
  "checkerStdoutAndStderr#43": "ok answer is \u0027100000000\u0027\r\n",
  "memoryConsumed#46": "5877760",
  "waiting": "false",
  "checkerStdoutAndStderr#1": "ok answer is \u00277\u0027\r\n",
  "memoryConsumed#45": "5808128",
  "checkerStdoutAndStderr#48": "ok answer is \u00271228437606\u0027\r\n",
  "memoryConsumed#44": "5804032",
  "checkerStdoutAndStderr#49": "ok answer is \u00271454467150\u0027\r\n",
  "memoryConsumed#43": "5808128",
  "checkerStdoutAndStderr#46": "ok answer is \u0027776379844\u0027\r\n",
  "memoryConsumed#42": "5488640",
  "checkerStdoutAndStderr#47": "ok answer is \u00271002408561\u0027\r\n",
  "checkerStdoutAndStderr#5": "ok answer is \u0027173817796\u0027\r\n",
  "memoryConsumed#41": "5500928",
  "output#58": "499992",
  "checkerStdoutAndStderr#4": "ok answer is \u0027100\u0027\r\n",
  "memoryConsumed#40": "5492736",
  "output#57": "2735290000",
  "checkerStdoutAndStderr#3": "ok answer is \u002781\u0027\r\n",
  "checkerStdoutAndStderr#2": "ok answer is \u002721\u0027\r\n",
  "output#59": "699984",
  "checkerStdoutAndStderr#9": "ok answer is \u00271680496696\u0027\r\n",
  "checkerStdoutAndStderr#40": "ok answer is \u00271613498\u0027\r\n",
  "output#54": "2735290000",
  "checkerStdoutAndStderr#8": "ok answer is \u002782931032\u0027\r\n",
  "checkerStdoutAndStderr#41": "ok answer is \u00271816501\u0027\r\n",
  "output#53": "2735290000",
  "checkerStdoutAndStderr#7": "ok answer is \u0027217877796\u0027\r\n",
  "output#56": "2735290000",
  "checkerStdoutAndStderr#6": "ok answer is \u0027195847796\u0027\r\n",
  "output#55": "2735290000",
  "output#61": "1099962",
  "output#60": "899974",
  "output#63": "1499932",
  "output#62": "1299948",
  "memoryConsumed#39": "5476352",
  "checkerStdoutAndStderr#33": "ok answer is \u0027192528\u0027\r\n",
  "memoryConsumed#38": "5472256",
  "checkerStdoutAndStderr#34": "ok answer is \u0027395503\u0027\r\n",
  "memoryConsumed#37": "5476352",
  "checkerStdoutAndStderr#31": "ok answer is \u002737\u0027\r\n",
  "memoryConsumed#36": "5484544",
  "checkerStdoutAndStderr#32": "ok answer is \u002744\u0027\r\n",
  "memoryConsumed#35": "5492736",
  "memoryConsumed#34": "5484544",
  "checkerStdoutAndStderr#37": "ok answer is \u00271004505\u0027\r\n",
  "memoryConsumed#33": "5488640",
  "checkerStdoutAndStderr#38": "ok answer is \u00271207504\u0027\r\n",
  "memoryConsumed#32": "5345280",
  "checkerStdoutAndStderr#35": "ok answer is \u0027598503\u0027\r\n",
  "memoryConsumed#31": "5341184",
  "checkerStdoutAndStderr#36": "ok answer is \u0027801509\u0027\r\n",
  "memoryConsumed#30": "5328896",
  "output#47": "1002408561",
  "output#46": "776379844",
  "output#49": "1454467150",
  "output#48": "1228437606",
  "output#43": "100000000",
  "checkerStdoutAndStderr#30": "ok answer is \u002734\u0027\r\n",
  "output#42": "2019503",
  "output#45": "550351839",
  "output#44": "324326172",
  "output#50": "2238041293",
  "output#52": "2730002583",
  "output#51": "2584018153",
  "checkerStdoutAndStderr#39": "ok answer is \u00271410500\u0027\r\n",
  "memoryConsumed#29": "5328896",
  "memoryConsumed#28": "5337088",
  "memoryConsumed#27": "5345280",
  "output#1": "7",
  "memoryConsumed#26": "5332992",
  "memoryConsumed#25": "5345280",
  "memoryConsumed#24": "5337088",
  "memoryConsumed#23": "5345280",
  "memoryConsumed#22": "5341184",
  "memoryConsumed#21": "5341184",
  "memoryConsumed#20": "5353472",
  "answer#90": "107727796",
  "answer#91": "129757796",
  "answer#92": "151787796",
  "answer#93": "400000000",
  "answer#83": "59",
  "answer#84": "75",
  "answer#85": "93",
  "answer#86": "19607796",
  "answer#87": "41637796",
  "answer#88": "64284021",
  "answer#89": "85697796",
  "output#8": "82931032",
  "output#9": "1680496696",
  "output#6": "195847796",
  "output#7": "217877796",
  "output#4": "100",
  "output#5": "173817796",
  "memoryConsumed#19": "5328896",
  "output#2": "21",
  "memoryConsumed#18": "5332992",
  "output#3": "81",
  "memoryConsumed#17": "5337088",
  "memoryConsumed#16": "5328896",
  "checkerStdoutAndStderr#99": "ok answer is \u00276371912224\u0027\r\n",
  "memoryConsumed#15": "5332992",
  "memoryConsumed#14": "7868416",
  "checkerStdoutAndStderr#97": "ok answer is \u00273524117610\u0027\r\n",
  "memoryConsumed#13": "6094848",
  "checkerStdoutAndStderr#98": "ok answer is \u00274157262760\u0027\r\n",
  "memoryConsumed#12": "5795840",
  "memoryConsumed#11": "5898240",
  "memoryConsumed#10": "5890048",
  "checkerStdoutAndStderr#91": "ok answer is \u0027129757796\u0027\r\n",
  "checkerStdoutAndStderr#92": "ok answer is \u0027151787796\u0027\r\n",
  "checkerStdoutAndStderr#90": "ok answer is \u0027107727796\u0027\r\n",
  "checkerStdoutAndStderr#95": "ok answer is \u00271445157664\u0027\r\n",
  "answer#80": "19",
  "checkerStdoutAndStderr#96": "ok answer is \u00271763625376\u0027\r\n",
  "answer#81": "29",
  "checkerStdoutAndStderr#93": "ok answer is \u0027400000000\u0027\r\n",
  "answer#82": "45",
  "checkerStdoutAndStderr#94": "ok answer is \u0027820196769\u0027\r\n",
  "memoryConsumed#2": "5345280",
  "answer#72": "100",
  "memoryConsumed#3": "5341184",
  "answer#73": "100",
  "memoryConsumed#4": "5341184",
  "answer#74": "100",
  "memoryConsumed#5": "5513216",
  "answer#75": "100",
  "memoryConsumed#6": "5513216",
  "answer#76": "100",
  "memoryConsumed#7": "5521408",
  "answer#77": "100",
  "memoryConsumed#8": "8732672",
  "answer#78": "9",
  "verdict": "\u003cspan class\u003d\u0027verdict-accepted\u0027\u003eAccepted\u003c/span\u003e",
  "memoryConsumed#9": "5894144",
  "answer#79": "16",
  "input#5": "80000 1100\r\n
  "input#6": "90000 1100\r\n6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317 6317...",
  "input#7": "100000 1100\r\n
  "input#8": "10000 100000\r\n
  "input#1": "3 3\r\n2 2 2\r\n",
  "input#2": "5 2\r\n3 1\r\n",
  "input#3": "9 10\r\n9 8 7 4 5 8 1 6 8 2\r\n",
  "memoryConsumed#1": "5345280",
  "input#4": "10 10\r\n1 9 7 6 2 4 7 8 1 3\r\n",
  "checkerStdoutAndStderr#88": "ok answer is \u002764284021\u0027\r\n",
  "checkerStdoutAndStderr#89": "ok answer is \u002785697796\u0027\r\n",
  "checkerStdoutAndStderr#86": "ok answer is \u002719607796\u0027\r\n",
  "checkerStdoutAndStderr#87": "ok answer is \u002741637796\u0027\r\n",
  "input#9": "80000 11300\r\n55236 62608 33945 3959 49425 74539 50492 18995 23197 79426 72881 60253 57264 21568 72338 14978 40532 70647 27771 9301 14296 1305 64654 25003 4945 73792 53744 37503 2964 14310 18505 6255 63038 7918 28488 49724 78124 15001 49565 74318 33795 44178 49533 52014 66857 8931 16674 35083 27210 51453 64840 7222 77780 44340 66737 43173 73211 6721 8610 33779 13366 68030 48868 9950 62656 65453 58948 9032 9752 22130 22419 4536 24193 14548 61222 77782 72451 62208 59863 59634 58600 9350 75778 79613 5695 36058...",
  "output#18": "14",
  "output#17": "7",
  "output#19": "0",
  "output#14": "9999999988",
  "checkerStdoutAndStderr#80": "ok answer is \u002719\u0027\r\n",
  "output#13": "1692072230",
  "checkerStdoutAndStderr#81": "ok answer is \u002729\u0027\r\n",
  "output#16": "4",
  "output#15": "0",
  "output#10": "1906526250",
  "checkerStdoutAndStderr#84": "ok answer is \u002775\u0027\r\n",
  "checkerStdoutAndStderr#85": "ok answer is \u002793\u0027\r\n",
  "output#12": "946110646",
  "answer#70": "100",
  "checkerStdoutAndStderr#82": "ok answer is \u002745\u0027\r\n",
  "output#11": "2132556044",
  "answer#71": "100",
  "checkerStdoutAndStderr#83": "ok answer is \u002759\u0027\r\n",
  "answer#61": "1099962",
  "answer#62": "1299948",
  "answer#63": "1499932",
  "answer#64": "1699914",
  "answer#65": "1899894",
  "answer#66": "2099872",
  "answer#67": "2299848",
  "answer#68": "100",
  "answer#69": "100",
  "checkerStdoutAndStderr#77": "ok answer is \u0027100\u0027\r\n",
  "checkerStdoutAndStderr#78": "ok answer is \u00279\u0027\r\n",
  "checkerStdoutAndStderr#75": "ok answer is \u0027100\u0027\r\n",
  "checkerStdoutAndStderr#76": "ok answer is \u0027100\u0027\r\n",
  "checkerStdoutAndStderr#79": "ok answer is \u002716\u0027\r\n",
  "checkerStdoutAndStderr#70": "ok answer is \u0027100\u0027\r\n",
  "checkerStdoutAndStderr#73": "ok answer is \u0027100\u0027\r\n",
  "checkerStdoutAndStderr#74": "ok answer is \u0027100\u0027\r\n",
  "checkerStdoutAndStderr#71": "ok answer is \u0027100\u0027\r\n",
  "answer#60": "899974",
  "checkerStdoutAndStderr#72": "ok answer is \u0027100\u0027\r\n",
  "answer#50": "2238041293",
  "answer#51": "2584018153",
  "answer#52": "2730002583",
  "answer#53": "2735290000",
  "answer#54": "2735290000",
  "answer#55": "2735290000",
  "answer#56": "2735290000",
  "answer#57": "2735290000",
  "answer#58": "499992",
  "answer#59": "699984",
  "timeConsumed#46": "0",
  "timeConsumed#47": "15",
  "timeConsumed#48": "0",
  "timeConsumed#49": "15",
  "timeConsumed#42": "0",
  "answer#40": "1613498",
  "timeConsumed#43": "15",
  "answer#41": "1816501",
  "timeConsumed#44": "15",
  "answer#42": "2019503",
  "timeConsumed#45": "15",
  "answer#43": "100000000",
  "answer#44": "324326172",
  "timeConsumed#40": "0",
  "answer#45": "550351839",
  "timeConsumed#41": "30",
  "answer#46": "776379844",
  "answer#47": "1002408561",
  "answer#48": "1228437606",
  "answer#49": "1454467150",
  "timeConsumed#39": "0",
  "timeConsumed#35": "0",
  "timeConsumed#36": "15",
  "timeConsumed#37": "0",
  "timeConsumed#38": "0",
  "timeConsumed#31": "15",
  "timeConsumed#32": "15",
  "answer#30": "34",
  "timeConsumed#33": "0",
  "answer#31": "37",
  "timeConsumed#34": "15",
  "answer#32": "44",
  "answer#33": "192528",
  "answer#34": "395503",
  "timeConsumed#30": "0",
  "answer#35": "598503",
  "answer#36": "801509",
  "answer#37": "1004505",
  "answer#38": "1207504",
  "answer#39": "1410500",
  "timeConsumed#28": "0",
  "timeConsumed#29": "15",
  "timeConsumed#24": "0",
  "timeConsumed#25": "15",
  "timeConsumed#26": "0",
  "timeConsumed#27": "0",
  "timeConsumed#20": "15",
  "timeConsumed#21": "0",
  "timeConsumed#22": "0",
  "answer#20": "4",
  "timeConsumed#23": "0",
  "answer#21": "9",
  "answer#22": "16",
  "answer#23": "25",
  "answer#24": "36",
  "answer#25": "49",
  "answer#26": "64",
  "answer#27": "19",
  "answer#28": "22",
  "answer#29": "27",
  "timeConsumed#17": "0",
  "timeConsumed#18": "30",
  "timeConsumed#19": "0",
  "timeConsumed#13": "15",
  "timeConsumed#14": "108",
  "timeConsumed#15": "15",
  "timeConsumed#16": "0",
  "timeConsumed#10": "15",
  "timeConsumed#11": "15",
  "timeConsumed#12": "15",
  "answer#10": "1906526250",
  "answer#11": "2132556044",
  "answer#12": "946110646",
  "answer#13": "1692072230",
  "answer#14": "9999999988",
  "answer#15": "0",
  "answer#16": "4",
  "answer#17": "7",
  "answer#18": "14",
  "answer#19": "0",
  "compilationError": "false",
  "verdict#1": "OK",
  "verdict#5": "OK",
  "answer#6": "195847796",
  "verdict#4": "OK",
  "answer#5": "173817796",
  "verdict#3": "OK",
  "answer#8": "82931032",
  "verdict#2": "OK",
  "answer#7": "217877796",
  "verdict#9": "OK",
  "verdict#8": "OK",
  "answer#9": "1680496696",
  "verdict#7": "OK",
  "verdict#6": "OK",
  "answer#2": "21",
  "answer#1": "7",
  "answer#4": "100",
  "answer#3": "81",
  "answer#104": "900000000",
  "answer#105": "1600000000",
  "answer#106": "2115816852",
  "answer#107": "3558091120",
  "answer#108": "4900000000",
  "answer#109": "6400000000",
  "answer#100": "8100000000",
  "answer#101": "9997184329",
  "answer#102": "56663011",
  "answer#103": "400000000",
  "answer#115": "5773823275",
  "answer#116": "7027256804",
  "answer#117": "8062898279",
  "answer#118": "8858746525",
  "answer#119": "8974233945",
  "answer#110": "7923846931",
  "answer#111": "9993912275",
  "answer#112": "1813969997",
  "answer#113": "3407342230",
  "answer#114": "4748660015",
  "answer#126": "958629152",
  "answer#127": "1150912024",
  "answer#128": "1337651201",
  "answer#129": "1520352446",
  "answer#94": "820196769",
  "answer#95": "1445157664",
  "answer#96": "1763625376",
  "answer#120": "9874754950",
  "answer#97": "3524117610",
  "answer#121": "5916590859",
  "answer#98": "4157262760",
  "answer#122": "198297996",
  "answer#99": "6371912224",
  "answer#123": "392295996",
  "answer#124": "585628184",
  "answer#125": "775955884",
  "timeConsumed#2": "15",
  "timeConsumed#3": "0",
  "timeConsumed#4": "15",
  "timeConsumed#5": "15",
  "timeConsumed#1": "0",
  "timeConsumed#6": "0",
  "timeConsumed#7": "0",
  "timeConsumed#8": "78",
  "timeConsumed#9": "15",
  "href": "/contest/1236/submission/122702491",
  "prevId": "122702149",
  "timeConsumed#104": "78",
  "timeConsumed#103": "77",
  "timeConsumed#102": "78",
  "timeConsumed#101": "77",
  "timeConsumed#100": "62",
  "timeConsumed#109": "108",
  "timeConsumed#108": "77",
  "timeConsumed#107": "77",
  "timeConsumed#106": "93",
  "timeConsumed#105": "93",
  "prettifyClass": "lang-cpp",
  "exitCode#15": "0",
  "timeConsumed#115": "31",
  "exitCode#16": "0",
  "timeConsumed#114": "30",
  "exitCode#17": "0",
  "timeConsumed#113": "31",
  "exitCode#18": "0",
  "timeConsumed#112": "15",
  "exitCode#11": "0",
  "timeConsumed#111": "78",
  "exitCode#12": "0",
  "timeConsumed#110": "108",
  "exitCode#13": "0",
  "exitCode#14": "0",
  "exitCode#10": "0",
  "timeConsumed#119": "61",
  "timeConsumed#118": "46",
  "timeConsumed#117": "61",
  "timeConsumed#116": "93",
  "exitCode#26": "0",
  "timeConsumed#126": "15",
  "testCount": "132",
  "exitCode#27": "0",
  "timeConsumed#125": "15",
  "exitCode#28": "0",
  "timeConsumed#124": "15",
  "exitCode#29": "0",
  "timeConsumed#123": "15",
  "exitCode#22": "0",
  "timeConsumed#122": "15",
  "exitCode#23": "0",
  "timeConsumed#121": "124",
  "exitCode#24": "0",
  "timeConsumed#120": "78",
  "exitCode#25": "0",
  "exitCode#20": "0",
  "problemName": "(E) Alice and the Unfair Game",
  "exitCode#21": "0",
  "timeConsumed#129": "15",
  "timeConsumed#128": "30",
  "timeConsumed#127": "0",
  "exitCode#19": "0",
  "exitCode#37": "0",
  "exitCode#38": "0",
  "exitCode#39": "0",
  "exitCode#33": "0",
  "exitCode#34": "0",
  "timeConsumed#132": "30",
  "exitCode#35": "0",
  "timeConsumed#131": "30",
  "exitCode#36": "0",
  "timeConsumed#130": "15",
  "exitCode#30": "0",
  "exitCode#31": "0",
  "exitCode#32": "0",
  "input#132": "100000 1\r\n50000\r\n",
  "input#131": "100000 10000\r\n
  "input#130": "100000 9000\r\n
  "exitCode#48": "0",
  "exitCode#49": "0",
  "exitCode#44": "0",
  "exitCode#45": "0",
  "exitCode#46": "0",
  "exitCode#47": "0",
  "exitCode#40": "0",
  "exitCode#41": "0",
  "exitCode#42": "0",
  "exitCode#43": "0",
  "exitCode#59": "0",
  "exitCode#55": "0",
  "exitCode#56": "0",
  "exitCode#57": "0",
  "exitCode#58": "0",
  "exitCode#51": "0",
  "exitCode#52": "0",
  "exitCode#53": "0",
  "exitCode#54": "0",
  "exitCode#50": "0"
}
